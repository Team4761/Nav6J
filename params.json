{"name":"Nav6","tagline":"Open-source Inertial Measurement Unit (IMU) designed for robotics","body":"[http://www.kauailabs.com/store/index.php?route=product/product&product_id=50 http://www.kauailabs.com/store/image/data/nav6_Banner3_build_selfguided_robots2.png]\r\n\r\n_NOTE:  the new [https://code.google.com/p/navx navX MXP Robotics Navigation Sensor] is now available; if you are using a National Instrument RoboRIO, this provides additional features including RoboRIO I/O Expansion and 9-axis headings (AHRS functionality) along with enhanced calibration algorithms and tools._\r\n\r\n*The _*nav6*_ [http://en.wikipedia.org/wiki/Inertial_measurement_unit inertial measurement unit (IMU)] brings sophisticated inertial navigation to air, land and sea robots, including the [http://www.usfirst.org/frc FIRST Robotics Challenge] (FRC).*\r\n\r\nnav6 rapidly calculates yaw, pitch, roll and compass heading, as well as linear acceleration, enabling features including:\r\n\r\n  * [FieldOrientedDriveExample \"Field-oriented\" drive mode]\r\n  * [AutoBalancingExample Robot balancing]\r\n  * [RotateToAngleExample Auto-rotation to an absolute or relative angle]\r\n  * [MotionDetection Motion / No-Motion Detection]\r\n  * Bump Detection\r\n\r\n== Key Features ==\r\n\r\n  * Yaw, Pitch and Roll Angles\r\n  * Tilt-compensated Compass Heading\r\n  * Configurable Update Rate from 4 to 100Hz\r\n  * Automatic Accelerometer/Gyroscope Calibration\r\n  * Automatic Hard-Iron Magnetometer Calibration\r\n  * Libraries and example code for integration onto a FRC Robot, in C++, Java and !LabView\r\n  * Completely Open Source:  Source Code, Schematics/Bill of Materials and Enclosure Design files (for 3D printer)\r\n  * Arduino-compatible - programmable with free Arduino IDE\r\n\r\n===*_Available now at the [http://www.kauailabs.com/store/index.php?route=product/product&product_id=50 Kauailabs store]._*===\r\n\r\n[http://www.kauailabs.com/store/index.php?route=product/product&product_id=50 https://nav6.googlecode.com/svn/trunk/images/nav6_purple_1_small.jpg]\r\n\r\n== Overview ==\r\n\r\nThe nav6 features the powerful Invensense [http://invensense.com/mems/gyro/mpu6050.html MPU-6050] IC which includes a 3-axis accelerometer, a 3-axis gyroscope and an on-chip \"Digital Motion Processor\" (DMP).  The nav6 employs sophisticated motion processing algorithms provided by the DMP included with the MPU-6050.  The result:  highly accurate tip/tilt, and accurate yaw that exhibits minimal drift of approximately 1 degree per minute.  The sensor provides a update rate up to 100Hz, suitable for use in robotic systems.\r\n\r\nThe nav6 also includes a Honeywell [http://www51.honeywell.com/aero/common/documents/myaerospacecatalog-documents/Defense_Brochures-documents/HMC5883L_3-Axis_Digital_Compass_IC.pdf HMC5883L] 3-axis magnetometer.  Although the magnetometer compass readings are often unreliable when robot motors are energized, it is useful for establishing absolute orientation at the beginning of a competition.  Combined with the nav6 \"pose\" and this initial orientation, a robot's absolute orientation throughout a competition match can be maintained.\r\n\r\nThe nav6 is managed by an Atmel ATMEGA328P microcontroller, which offloads processing from the host.  The nav6 is Arduino-compatible, and the nav6 firmware can be customized via the free Arduino Integrated Development Environment (IDE).  \r\n\r\nThe nav6 has been designed specifically to enable [FRCRobotInstallation easy integration] into a FRC robotics control system:  it's power connection connects directly to an unregulated 12V output on the Power Distribution Board and it's data connection connects directly to the cRio serial port.  Additionally, [https://code.google.com/p/nav6/source/browse/#svn%2Ftrunk%2Fcrio source code for easy integration into the FRC cRio controller] is also provided.\r\n\r\n==Fully Open Source==\r\n\r\nThe nav6 project is completely open-source and includes the following freely-available components:\r\n\r\n===_Board schematics/layout_===\r\n\r\n  * [https://code.google.com/p/nav6/source/browse/#svn%2Ftrunk%2Fschematics board schematics] (developed in Eagle 6.4.0, freely available at http://www.cadsoftusa.com/) and bill of materials.\r\n\r\n===_Arduino-compatible firmware source code_===\r\n\r\n  * As the nav6 behaves almost exactly like an Arduino UNO Rev 3 board, it can be programmed via the [http://arduino.cc/en/main/software Arduino IDE].  \r\n  * The [https://code.google.com/p/nav6/source/browse/#svn%2Ftrunk%2Farduino nav6 firmware Source Code] can be built and downloaded to the nav6 via the Arduino IDE.\r\n\r\nNOTE: To interface the Arduino IDE to the nav6 from a computer without a RS-232 serial port, you can use an inexpensive [http://www.kauailabs.com/store/index.php?route=product/product&product_id=53 USB-to-RS-232 converter cable].\r\n\r\n===_cRio client source code_===\r\n\r\n  * The [https://code.google.com/p/nav6/source/browse/#svn%2Ftrunk%2Fcrio nav6 cRio library source code] is compatible with the FRC WPI Library (C++ and Java variants) as well as !LabView, which runs on the FIRST robotics cRio and RoboRIO platforms.  This code allows robot control system code to acquire yaw/pitch/roll/compass-heading values from the board in real-time.\r\n\r\n===_Enclosure design files_===\r\n\r\nA custom enclosure to protect and mount the nav6 IMU can be made with a 3D printer using provided [Enclosure] design files.\r\n\r\n[http://www.kauailabs.com http://www.kauailabs.com/wp-content/uploads/2013/12/cropped-kauailabsbanner_990_x_18012.png]","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}